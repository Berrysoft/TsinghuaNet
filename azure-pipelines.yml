trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  projects: |
    TsinghuaNet.CLI/TsinghuaNet.CLI.csproj
    TsinghuaNet.CLI/TsinghuaNet.Eto.Wpf/TsinghuaNet.Eto.Wpf.csproj
    TsinghuaNet.CLI/TsinghuaNet.Eto.Gtk/TsinghuaNet.Eto.Gtk.csproj
    TsinghuaNet.CLI/TsinghuaNet.Eto.Mac/TsinghuaNet.Eto.Mac.csproj
  cliProject: 'TsinghuaNet.CLI/TsinghuaNet.CLI.csproj'
  etoWpfProject: 'TsinghuaNet.CLI/TsinghuaNet.Eto.Wpf/TsinghuaNet.Eto.Wpf.csproj'
  etoGtkProject: 'TsinghuaNet.CLI/TsinghuaNet.Eto.Gtk/TsinghuaNet.Eto.Gtk.csproj'
  etoMacProject: 'TsinghuaNet.CLI/TsinghuaNet.Eto.Mac/TsinghuaNet.Eto.Mac.csproj'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreInstaller@0
  inputs:
    version: "3.0.100-preview6-012264"

- task: DotNetCoreCLI@2
  inputs:
    projects: '$(projects)'
    command: restore
    feedsToUse: config
    nugetConfigPath: NuGet.config

- script: dotnet publish $(cliProject) -r win-x64 -c Release --output $(Build.ArtifactStagingDirectory)
- script: dotnet publish $(etoWpfProject) -r win-x64 -c Release -f netcoreapp3.0 --output $(Build.ArtifactStagingDirectory)
- script: dotnet publish $(etoWpfProject) -r win-x64 -c Release -f net48 --output $(Build.ArtifactStagingDirectory)
- script: dotnet publish $(etoGtkProject) -r linux-x64 -c Release --output $(Build.ArtifactStagingDirectory)

- task: DotNetCoreCLI@2
  inputs:
    projects: '$(etoMacProject)'
    command: build

- task: CopyFiles@2
  displayName: 'Copy Eto.Mac Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
     TsinghuaNet.Eto\TsinghuaNet.Eto.Mac\bin\Release\net48\TsinghuaNet.Eto.Mac.app\*
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
