trigger:
- master

variables:
  cliProject: 'TsinghuaNet.CLI/TsinghuaNet.CLI.csproj'

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: "3.0.100-preview6-012264"

  - task: DotNetCoreCLI@2
    inputs:
      projects: '$(cliProject)'
      command: restore
      feedsToUse: config
      nugetConfigPath: NuGet.Config
      
  - script: wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add - && sudo apt-add-repository "deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-3.9 main" && sudo apt -o Acquire::AllowInsecureRepositories=true update && sudo apt-get install clang-3.9 lldb-3.9 comerr-dev krb5-multidev libgssrpc4 libkadm5clnt-mit9 libkadm5srv-mit9 libkdb5-8 libkrb5-dev && sudo ln /usr/lib/x86_64-linux-gnu/libgssapi_krb5.so.2 /usr/lib/libgssapi_krb5.so
  - script: dotnet publish $(cliProject) -r linux-x64 -c Release --output $(Build.ArtifactStagingDirectory)/linux-x64
  - script: strip $(Build.ArtifactStagingDirectory)/linux-x64/TsinghuaNet.CLI
  - script: rm $(Build.ArtifactStagingDirectory)/linux-x64/*.pdb

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'publish'

- job: macOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: "3.0.100-preview6-012264"

  - task: DotNetCoreCLI@2
    inputs:
      projects: '$(cliProject)'
      command: restore
      feedsToUse: config
      nugetConfigPath: NuGet.Config

  - script: dotnet publish $(cliProject) -r osx-x64 -c Release --output $(Build.ArtifactStagingDirectory)/osx-x64
  - script: strip $(Build.ArtifactStagingDirectory)/osx-x64/TsinghuaNet.CLI
  - script: rm $(Build.ArtifactStagingDirectory)/osx-x64/*.pdb

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'publish'

- job: Windows
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: "3.0.100-preview6-012264"

  - task: DotNetCoreCLI@2
    inputs:
      projects: '$(cliProject)'
      command: restore
      feedsToUse: config
      nugetConfigPath: NuGet.Config

  - script: dotnet publish $(cliProject) -r win-x64 -c Release --output $(Build.ArtifactStagingDirectory)/win-x64
  - script: del $(Build.ArtifactStagingDirectory)\win-x64\*.pdb

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'publish'
