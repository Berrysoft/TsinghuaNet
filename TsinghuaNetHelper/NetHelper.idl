namespace TsinghuaNetHelper
{
    struct FluxUser
    {
        String Username;
        UInt64 Flux;
        Windows.Foundation.TimeSpan OnlineTime;
        Double Balance;
    };

    struct LogResponse
    {
        String Code;
        String Message;
    };

    interface ICredential
    {
        String Username;
        String Password;
    }

    interface IConnect
    {
        Windows.Foundation.IAsyncOperation<LogResponse> LoginAsync();
        Windows.Foundation.IAsyncOperation<LogResponse> LogoutAsync();
        Windows.Foundation.IAsyncOperation<FluxUser> FluxAsync();
    }

    [default_interface] runtimeclass NetHelper : ICredential, IConnect
    {
        NetHelper();
    }

    [default_interface] runtimeclass Auth4Helper : ICredential, IConnect
    {
        Auth4Helper();
    }

    [default_interface] runtimeclass Auth6Helper : ICredential, IConnect
    {
        Auth6Helper();
    }

    [default_interface] runtimeclass Auth4Helper25 : ICredential, IConnect
    {
        Auth4Helper25();
    }

    [default_interface] runtimeclass Auth6Helper25 : ICredential, IConnect
    {
        Auth6Helper25();
    }

    [bindable] runtimeclass NetUser : Windows.UI.Xaml.DependencyObject
    {
        NetUser();

        String Address;
        static Windows.UI.Xaml.DependencyProperty AddressProperty { get; };

        String LoginTime;
        static Windows.UI.Xaml.DependencyProperty LoginTimeProperty { get; };

        String Client;
        static Windows.UI.Xaml.DependencyProperty ClientProperty { get; };

        void Drop();
        event Windows.Foundation.EventHandler<String> DropUser;

        Boolean Equals(NetUser user);
    }

    [default_interface] runtimeclass UseregHelper : ICredential
    {
        UseregHelper();

        Windows.Foundation.IAsyncOperation<LogResponse> LoginAsync();
        Windows.Foundation.IAsyncOperation<LogResponse> LogoutAsync();
        Windows.Foundation.IAsyncOperation<LogResponse> LogoutAsync(String ip);
        Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVector<NetUser> > UsersAsync();
    }
} // namespace TsinghuaNetHelper
